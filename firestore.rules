rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.token.email == resource.data.email;
      allow create: if request.auth != null;
      allow delete: if false; // koi delete nahi kar sakta
    }

    // Classes collection (public read, teacher assign later)
    match /classes/{classId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == "admin"; // sirf admin write karega
    }

    // Students collection
    match /students/{studentId} {
      allow read: if request.auth != null &&
        (
          // Parent apne hi student read kare
          (request.auth.token.email == resource.data.parentEmail) ||
          // Teacher apni class read kare
          (request.auth.token.role == "teacher")
        );

      allow write: if request.auth != null &&
        (
          // Teacher apni class ke student ko update kare
          (request.auth.token.role == "teacher")
        );
    }

    // Stars collection (Star of the Month)
    match /stars/{starId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.token.role == "teacher";
      allow delete: if false;
    }
  }
}